% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evolutionary.R
\name{basicEda}
\alias{basicEda}
\title{Basic Genetic Algorithm}
\usage{
basicEda(evaluate, initial.population, selectSubpopulation, selection.ratio,
  learn, do.log = TRUE, verbose = TRUE, non.valid = "ignore",
  valid = allValid, correct = doNothing, resources = cResource(), ...)
}
\arguments{
\item{evaluate}{Function of a single parameter. Given a solution, the function returns its evaluation as a real number.}

\item{initial.population}{A list of solutions representing the population to initialize the algorithm.}

\item{selectSubpopulation}{Function to select individuals to create the new generation. See details for more information about this function.}

\item{selection.ratio}{Ratio of the population that is selected and kept in the new generation.}

\item{do.log}{Logic value to indicate whether the progress shoul be tracked or not}

\item{verbose}{Logic value to indicate whether the function should print information about the search}

\item{non.valid}{Action to be performed when a non valid solution is considered. The options are \code{'ignore'}, meaning that the solution is considered anyway, \code{'discard'}, meaning that the solution is not considered and \code{'correct'}, meaning that the solution has to be corrected. This parameter has to be set only when there can be non valid solutions}

\item{valid}{A function that, given a solution, determines whether it is valid or not}

\item{correct}{A function that, given a non valid solution, corrects it. This optional parameter has to be set only with the \code{'correct'} option}

\item{resources}{Object of class \code{\linkS4class{cResource}} representing the available computational resources for the search. Bear in mind that there is no other stop criterion beyond a limited amount of resources. Therefore, you should set, at least, a limit to the total time, evaluations or iterations}

\item{...}{Special argument to pass additional parameters to the functions used in the search}

\item{selectCross}{Function to select individuals from the selected individuals to be crossed. See details for more information about this function.}

\item{cross}{Function to cross solutions. See details for more information.}

\item{mutate}{Function to mutate solutions. It's first argument has to be the solution to mutate and return the mutated solution. It can have other arguments and it should have, at the end, the special argument ...}

\item{mutation.rate}{Probability of mutating a solution.}
}
\value{
The function returns an object of class \code{\linkS4class{mHResult}} with all the information about the search
}
\description{
This function implements a basic version of the genetic algorithm
}
\details{
The first three arguments in the selection functions have to be a list with the population, a vector with the evaluation of the individuals in the population and the size of the selection. Additionally the functio has to have the special argument ... The function should return a list with two elements named \code{population} and \code{evaluation}. The former has to be a list with the selected individuals and the second a vector with theri evaluation. For an example, please see function \code{\link{tournamentSelection}}. The crossover function has to have, as the first two arguments, two solutions to be crossed. It can have more arguments and has to have as last argument the ... This function should return a list with the newly created solutoins.
}
\seealso{
\code{\link{tournamentSelection}}

Other Evoluationary algorithms: \code{\link{basicGeneticAlgorithm}}
}

