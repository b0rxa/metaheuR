% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/constructive_algorithms.R
\name{misGreedy}
\alias{misGreedy}
\title{Constructive greedy algorithm for the Maximum Independet Set (MIS) problem}
\usage{
misGreedy(graph, cl.size = 1)
}
\arguments{
\item{graph}{Graph where the MIS has to be found}

\item{cl.size}{Number of nodes to consider at each step of the algorithm.  By default it is 1, thus implementing a sheer greedy algorithm. If this value is greater than 1, then random solutions are created considering at each step the best options, as in GRASP algorithms.}
}
\value{
A logical vector indicating which nodes are in the independent set
}
\description{
This function implements a simple constructive greedy algorithm for the MIS problem
}
\details{
The algorithm builds the solution iteratively selecting, uniformly at random, one of the nodes in the candidate list; this list contains the available nodes with the lowest degree. By default the candidate list is 1, which means that, in absence of ties, the algorithm returns always the same solution. The candidate list can be longer, in which case the algorithm generates random greedy solutions that can be used in GRASP-like algorithms.
}
\examples{
library(igraph)
rnd.graph <- random.graph.game(20, 0.2)
solution <- misGreedy(rnd.graph)
misp <- misProblem(rnd.graph)
misp$plot(solution)
## Random good solutions
solution <- misGreedy(rnd.graph, cl.size=5)
misp$plot (solution)
solution <- misGreedy(rnd.graph, cl.size=5)
misp$plot(solution)

}
\seealso{
Other Constructive algorithms: \code{\link{tspGreedy}}
}

